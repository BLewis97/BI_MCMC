theta = numpyro.sample(                           
        "theta",                                       
        TruncatedNormal(
            low   = jnp.array([-7.00, -2.50, -3.95, -3.00, -4.00, N0 - fac[2] * jnp.log10(4.0)]),
            high  = jnp.array([-4.90,  0.00, -2.00, -1.00, -1.00, N0 - fac[0] * jnp.log10(4.0)]),
            loc   = jnp.array([-5.90, -1.20, -2.30, -2.00, -2.70,  1.00]),
            scale = jnp.array([std_dev, std_dev, std_dev, std_dev, std_dev, std_dev]),
        ),
    ) #in log form, not physically understandable - these units = 1e15 cm-3


#Truncated normal distributions of priors in special units. See NOTE for detailed conversion,
#but 1 units = 1e15 cm3. Consider each parameters conversion with this in mind (Auger = cm6s-1)

An example of an Auger rate constant (from https://doi.org/10.17863/CAM.6537)

a = ~ 1e-28 cm6s-1 = 1e-37 cm-3ns-1

Divide by our constant, 1e15 cm-3, but it has to be twice to match the units

1e-37 cm6ns-1 * 1e15 cm-3 * 1e15 cm-3 = 1e-7 ns-1
Take the log, as we want to get these all in closer orders of magnitude
log(1e-7) = -7
    
    ka    = theta[0]
    kt    = theta[1]
    kb    = theta[2]
    kdt   = theta[3]
    kdp   = theta[4]
    NT    = theta[5]

For kb, -3.95 => 1e-4
1e-19 cm3s-1
